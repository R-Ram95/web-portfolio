anchors:
  configure-aws-access: &configure-aws-access
    run:
      name: Configure AWS access
      command: |
        mkdir -p ~/.aws
        file=~/.aws/credentials
        echo "[default]" > $file
        echo "aws_access_key_id = $AWS_ACCESS_KEY_ID" >> $file
        echo "aws_secret_access_key = $AWS_SECRET_ACCESS_KEY" >> $file

  # Installs front end dependencies
  install-fe-dependencies: &install-fe-dependencies
    run:
      name: Install front end dependencies
      command: |
        npm install

# Creates a centralized directory to store build artifacts, allowing them to be persisted between jobs
# and builds to the FE package
  build-fe-package: &build-fe-package
    run:
      name: Run Build
      command: |
        mkdir ~/workspace
        npm run build
        cp -r dist ~/workspace

  # Initializes infrastructure
  install-infrastructure-dependencies: &install-infrastructure-dependencies 
    run:
      name: Install Infrastructure Dependencies
      command: |
        cd ./infrastructure
        terraform init

  cache-dependencies: &cache-dependencies
    save_cache:
      key: dependency-cache-{{ checksum "package.json" }}
      paths:
        - ./node_modules
        - ./infrastructure/.terraform

  load-dependency-cache: &load-dependency-cache
    restore_cache:
      key: dependency-cache-{{ checksum "package.json" }}

version: 2.1

executors:
  default:
    docker:
      - image: cimg/node:16.18.1
      - image: amazon/aws-cli:2.13.13
jobs:
  build:
    executor: default
    steps:
      - checkout
      - *load-dependency-cache
      - *install-fe-dependencies
      - *cache-dependencies
      - *build-fe-package
      - persist_to_workspace:
          root: ~/
          paths: [workspace]

  deploy:
    executor: default
    docker:
      - image: hashicorp/terraform:light
    steps:
      - checkout
      - *load-dependency-cache
      - *configure-aws-access
      - *install-infrastructure-dependencies
      - attach_workspace:
          at: ~/
      - run:
          name: Set domain env variable
          command: |
            echo "domain_name = \"$DOMAIN_NAME\"" > ./infrastructure/terraform.tfvars
      - run:
          name: Deploy to AWS
          command: |
            cp -r ~/workspace/dist ./
            cd ./infrastructure
            terraform apply -auto-approve
      - run: 
          name: Create Cloudfront Invalidation
          command: |
            aws cloudfront create-invalidation --distribution-id $CLOUDFRONT_DIST_ID --paths "/*"

workflows:
  build-and-deploy:
    jobs:
      - build
      - deploy:
          context: aws-account
          requires:
            - build
